openapi: 3.0.0
info:
  title: Market Sage API
  version: 1.0.0
  description: MarketSage API for discovery, security validation, and monitoring

servers:
  - url: /api/v1
    description: API v1

tags:
  - name: Token Discovery
    description: Token discovery operations
  - name: Token Security Validation
    description: Token security validation operations
  - name: Token Monitoring
    description: Token monitoring operations

paths:
  # Token Discovery Manager
  /token-discovery/status:
    get:
      summary: Token discovery service status
      description: Returns the current status & info of the token discovery service
      tags:
        - Token Discovery
      responses:
        "200":
          description: Token discovery service status
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  running:
                    type: boolean
                    description: Whether the token discovery service is running
                  statistics:
                    $ref: "#/components/schemas/TokenDiscoveryStatistics"
                    description: Statistics of the token discovery service
  /token-discovery/start:
    post:
      summary: Start token discovery service
      description: Starts the token discovery service
      tags:
        - Token Discovery
      responses:
        "200":
          description: Token discovery service started
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /token-discovery/stop:
    post:
      summary: Stop token discovery service
      description: Stops the token discovery service
      tags:
        - Token Discovery
      responses:
        "200":
          description: Token discovery service stopped
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /token-discovery/retry-verification:
    post:
      summary: Retry token verification
      description: Retries verification for tokens that failed previous verification attempts
      tags:
        - Token Discovery
      responses:
        "200":
          description: Verification retry initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error retrying token verification"

  # Token Security Validator
  /token-security-validator/status:
    get:
      summary: Token security validator status
      description: Returns the current status of the token security validator
      tags:
        - Token Security Validation
      responses:
        "200":
          description: Token security validator status
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  statistics:
                    $ref: "#/components/schemas/TokenSecurityValidatorStatistics"
  /token-security-validator/active-tokens:
    get:
      summary: Get active tokens
      description: Returns all active tokens
      tags:
        - Token Security Validation
      responses:
        "200":
          description: Active tokens
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  activeTokens:
                    type: array
                    items:
                      $ref: "#/components/schemas/ActiveToken"
  /token-security-validator/token-liquidity:
    get:
      summary: Check token liquidity
      description: Checks if a token has liquidity
      tags:
        - Token Security Validation
      parameters:
        - in: query
          name: tokenAddress
          required: true
          schema:
            type: string
          description: The token contract address
          example: "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
      responses:
        "200":
          description: Liquidity check result
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Liquidity check result"
                  liquidity:
                    $ref: "#/components/schemas/LiquidityDto"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Token address is required"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error checking liquidity"
                  error:
                    type: string
  /token-security-validator/token:
    post:
      summary: Add token for validation
      description: Adds a new token to be validated
      tags:
        - Token Security Validation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - address
                - creatorAddress
              properties:
                address:
                  type: string
                  description: The token contract address
                  example: "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                creatorAddress:
                  type: string
                  description: The address of the token creator
                  example: "0x6aAFF8af0ae8017725312C388bA3745dfE91185B"
      responses:
        "200":
          description: Token added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  activeToken:
                    $ref: "#/components/schemas/ActiveToken"
        "500":
          description: Error adding token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string

  # Token Monitor Manager
  /token-monitor/tokens:
    get:
      summary: Get all tokens
      description: Returns all tokens being monitored
      tags:
        - Token Monitoring
      responses:
        "200":
          description: All tokens
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All tokens"
                  tokens:
                    type: array
                    items:
                      $ref: "#/components/schemas/TokenDto"
  /token-monitor/trades:
    get:
      summary: Get all trades
      description: Returns all trades made within the system
      tags:
        - Token Monitoring
      responses:
        "200":
          description: All trades
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All trades"
                  trades:
                    type: array
                    items:
                      $ref: "#/components/schemas/TradeDto"
  /token-monitor/positions:
    get:
      summary: Get all positions
      description: Returns all positions being monitored
      tags:
        - Token Monitoring
      responses:
        "200":
          description: All positions
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  positions:
                    type: array
                    items:
                      $ref: "#/components/schemas/PositionDto"
  /token-monitor/active-positions:
    get:
      summary: Get active positions
      description: Returns only active positions being monitored
      tags:
        - Token Monitoring
      responses:
        "200":
          description: Active positions
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  positions:
                    type: array
                    items:
                      $ref: "#/components/schemas/PositionDto"

  /token-monitor/buy-token:
    post:
      summary: Buy token
      description: Executes a token purchase transaction
      tags:
        - Token Monitoring
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tokenAddress
                - tradeType
                - usdAmount
              properties:
                tokenAddress:
                  type: string
                  description: The token contract address
                  example: "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                tradeType:
                  type: string
                  description: The type of trade to execute
                  enum: ["usdValue", "earlyExit", "doubleExit"]
                  example: "usdValue"
                usdAmount:
                  type: number
                  description: The amount in USD to purchase
                  example: 100
      responses:
        "200":
          description: Token successfully purchased
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Token bought"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid parameters"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error buying token"
  /token-monitor/sell-token:
    post:
      summary: Sell token
      description: Executes a token sell transaction
      tags:
        - Token Monitoring
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tokenAddress
                - formattedAmount
              properties:
                tokenAddress:
                  type: string
                  description: The token contract address
                  example: "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                formattedAmount:
                  type: string
                  description: The formatted amount of tokens to sell
                  example: "1000.0"
      responses:
        "200":
          description: Token successfully sold
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Token sold"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid parameters"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error selling token"
  /token-monitor/monitor-token:
    post:
      summary: Monitor token
      description: Adds a token to the monitoring system
      tags:
        - Token Monitoring
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tokenAddress
              properties:
                tokenAddress:
                  type: string
                  description: The token contract address
                  example: "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
      responses:
        "200":
          description: Token successfully added to monitoring
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Token monitored"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid token address"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error monitoring token"

components:
  schemas:
    # Token Discovery
    TokenDiscoveryStatistics:
      statistics:
        type: object
        properties:
          blocksScanned:
            type: number
            description: Number of blocks scanned
          contractsDiscovered:
            type: number
            description: Number of contracts discovered
          reverifyableContracts:
            type: number
            description: Number of reverifyable contracts
          tokensValidated:
            type: number
            description: Number of tokens validated
          lastScannedBlock:
            type: number
            description: Last scanned block

    # Token Security Validation
    TokenSecurityValidatorStatistics:
      type: object
      properties:
        activeTokenCount:
          type: number
          description: Number of active tokens
        honeypotCount:
          type: number
          description: Number of honeypots
        rugpullCount:
          type: number
          description: Number of rugpulls
        tokensCreated:
          type: number
          description: Number of tokens created
    LiquidityDto:
      type: object
      properties:
        v2Liquidity:
          type: object
          properties:
            exists:
              type: boolean
              description: Whether the token has liquidity on Uniswap V2
            liquidityEth:
              type: string
              description: Liquidity in ETH
            pairAddress:
              type: string
              description: Pair address
        v3Liquidity:
          type: object
          properties:
            exists:
              type: boolean
              description: Whether the token has liquidity on Uniswap V3
            liquidityEth:
              type: string
              description: Liquidity in ETH
            poolAddress:
              type: string
              description: Pool address
            feeTier:
              type: number
              description: Fee tier
        v4Liquidity:
          type: object
          properties:
            exists:
              type: boolean
              description: Whether the token has liquidity on Uniswap V4
            liquidityEth:
              type: string
              description: Liquidity in ETH
        aerodromeLiquidity:
          type: object
          properties:
            exists:
              type: boolean
              description: Whether the token has liquidity on Aerodrome
            liquidityEth:
              type: string
              description: Liquidity in ETH
    ActiveToken:
      type: object
      properties:
        address:
          type: string
          description: The token contract address
          example: "0x1234567890123456789012345678901234567890"
        creatorAddress:
          type: string
          description: The address of the token creator
          example: "0x0987654321098765432109876543210987654321"
        addedAt:
          type: number
          description: Timestamp when the token was added to the validator (in milliseconds)
          example: 1698512400000
        expiresAt:
          type: number
          description: Timestamp when the token validation expires (in milliseconds)
          example: 1698513000000
        hasBalance:
          type: boolean
          description: Whether the token has balance
        hasLiquidity:
          type: boolean
          description: Whether the token has liquidity
        erc20:
          type: object
          description: ERC20 token details
          properties:
            name:
              type: string
              example: "Sample Token"
            symbol:
              type: string
              example: "STKN"
            decimals:
              type: number
              example: 18
            totalSupply:
              type: string
              example: "1000000000000000000000000"

    # Token Monitoring
    MonitoringStatistics:
      type: object
      properties:
        activePositions:
          type: number
          description: Number of active positions
        closedPositions:
          type: number
          description: Number of closed positions
        profitablePositions:
          type: number
          description: Number of profitable positions
        unprofitablePositions:
          type: number
          description: Number of unprofitable positions
    TokenDto:
      type: object
      properties:
        name:
          type: string
          description: Token name
        address:
          type: string
          description: Token contract address
        creatorAddress:
          type: string
          description: Token creator address
        isSuspicious:
          type: boolean
          description: Whether the token is suspicious
        discoveredAt:
          type: number
          description: Timestamp when the token was discovered (in milliseconds)
    TradeDto:
      type: object
      properties:
        tokenAddress:
          type: string
          description: Token contract address
        tokenName:
          type: string
          description: Token contract address
        transactionHash:
          type: string
          description: Transaction hash
        status:
          type: string
          enum: ["buy", "sell"]
          description: Trade status
        type:
          type: string
          enum: ["usdValue", "doubleExit", "earlyExit", "partialSell", "fullSell"]
          description: Trade type
        ethSpent:
          type: string
          description: ETH spent
        ethReceived:
          type: string
          description: ETH received
        formattedSellAmount:
          type: string
          description: Formatted sell amount
        formattedBuyAmount:
          type: string
          description: Formatted buy amount
        gasCostEth:
          type: string
          description: Gas cost in ETH
        createdAt:
          type: number
          description: Timestamp when the trade was created (in milliseconds)
    PositionDto:
      type: object
      properties:
        tokenAddress:
          type: string
          description: Token contract address
        tokenName:
          type: string
          description: Token name
        averageEntryPriceUsd:
          type: string
          description: Average entry price in USD
        averageExitPriceUsd:
          type: string
          description: Average exit price in USD
        currentProfitLossUsd:
          type: number
          description: Current profit/loss in USD
