openapi: 3.0.0
info:
  title: Market Sage API
  version: 1.0.0
  description: MarketSage API for discovery, security validation, and monitoring

servers:
  - url: /api/v1
    description: API v1

tags:
  - name: Token Discovery
    description: Token discovery operations
  - name: Token Security Validation
    description: Token security validation operations
  - name: Token Monitoring
    description: Token monitoring operations
  - name: System
    description: System operations and health checks

paths:
  # Token Discovery Manager
  /token-discovery/status:
    get:
      summary: Token discovery service status
      description: Returns the current status of the token discovery service
      tags:
        - Token Discovery
      responses:
        "200":
          description: Token discovery service status
          content:
            application/json:
              schema:
                type: object
                properties:
                  running:
                    type: boolean
                    description: Whether the token discovery service is running
                  statistics:
                    $ref: "#/components/schemas/DiscoveryStatistics"
  /token-discovery/start:
    post:
      summary: Start token discovery service
      description: Starts the token discovery service
      tags:
        - Token Discovery
      responses:
        "200":
          description: Token discovery service started
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /token-discovery/stop:
    post:
      summary: Stop token discovery service
      description: Stops the token discovery service
      tags:
        - Token Discovery
      responses:
        "200":
          description: Token discovery service stopped
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  # Token Security Validator
  /token-security-validator/status:
    get:
      summary: Token security validator status
      description: Returns the current status of the token security validator
      tags:
        - Token Security Validation
      responses:
        "200":
          description: Token security validator status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  statistics:
                    $ref: "#/components/schemas/ValidationStatistics"
  /token-security-validator/token-liquidity:
    get:
      summary: Check token liquidity
      description: Checks if a token has liquidity
      tags:
        - Token Security Validation
      parameters:
        - in: query
          name: tokenAddress
          required: true
          schema:
            type: string
          description: The token contract address
          example: "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
      responses:
        "200":
          description: Liquidity check result
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Liquidity check result"
                  liquidity:
                    $ref: "#/components/schemas/LiquidityDto"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Token address is required"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error checking liquidity"
                  error:
                    type: string
  /token-security-validator/token:
    post:
      summary: Add token for validation
      description: Adds a new token to be validated
      tags:
        - Token Security Validation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenValidationItem"
      responses:
        "200":
          description: Token added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  activeToken:
                    $ref: "#/components/schemas/ActiveToken"
        "500":
          description: Error adding token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  # Token Monitor Manager
  /token-monitor/status:
    get:
      summary: Token monitor status
      description: Returns the current status of the token monitor service
      tags:
        - Token Monitoring
      responses:
        "200":
          description: Token monitor status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  statistics:
                    $ref: "#/components/schemas/MonitoringStatistics"

  /token-monitor/positions:
    get:
      summary: Get all positions
      description: Returns all positions being monitored
      tags:
        - Token Monitoring
      responses:
        "200":
          description: All positions
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  positions:
                    type: array
                    items:
                      $ref: "#/components/schemas/PositionDto"

  /token-monitor/active-positions:
    get:
      summary: Get active positions
      description: Returns only active positions being monitored
      tags:
        - Token Monitoring
      responses:
        "200":
          description: Active positions
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  positions:
                    type: array
                    items:
                      $ref: "#/components/schemas/PositionDto"

components:
  schemas:
    ServiceStatus:
      type: object
      properties:
        status:
          type: string
        running:
          type: boolean
          description: Whether the service is running
        message:
          type: string

    DiscoveryStatistics:
      type: object
      properties:
        tokensDiscovered:
          type: number
          description: Number of tokens discovered
        lastDiscovery:
          type: string
          format: date-time
          description: Timestamp of the last discovery

    ValidationStatistics:
      type: object
      properties:
        tokensValidated:
          type: number
          description: Number of tokens validated
        tokensRejected:
          type: number
          description: Number of tokens rejected
        activeTokens:
          type: number
          description: Number of active tokens

    MonitoringStatistics:
      type: object
      properties:
        activePositions:
          type: number
          description: Number of active positions
        closedPositions:
          type: number
          description: Number of closed positions
        profitablePositions:
          type: number
          description: Number of profitable positions
        unprofitablePositions:
          type: number
          description: Number of unprofitable positions

    PositionDto:
      type: object
      properties:
        id:
          type: string
          description: Position ID
        tokenAddress:
          type: string
          description: Token contract address
        entryPrice:
          type: string
          description: Entry price
        currentPrice:
          type: string
          description: Current price
        profit:
          type: number
          description: Current profit/loss percentage
        entryTime:
          type: string
          format: date-time
          description: Entry timestamp
        exitTime:
          type: string
          format: date-time
          description: Exit timestamp (null if position is active)
        active:
          type: boolean
          description: Whether the position is active

    LiquidityDto:
      type: object
      properties:
        v2Liquidity:
          type: object
          properties:
            exists:
              type: boolean
              description: Whether the token has liquidity on Uniswap V2
            liquidityEth:
              type: string
              description: Liquidity in ETH
            pairAddress:
              type: string
              description: Pair address
        v3Liquidity:
          type: object
          properties:
            exists:
              type: boolean
              description: Whether the token has liquidity on Uniswap V3
            liquidityEth:
              type: string
              description: Liquidity in ETH
            poolAddress:
              type: string
              description: Pool address
            feeTier:
              type: number
              description: Fee tier
        v4Liquidity:
          type: object
          properties:
            exists:
              type: boolean
              description: Whether the token has liquidity on Uniswap V4
            liquidityEth:
              type: string
              description: Liquidity in ETH
        aerodromeLiquidity:
          type: object
          properties:
            exists:
              type: boolean
              description: Whether the token has liquidity on Aerodrome
            liquidityEth:
              type: string
              description: Liquidity in ETH

    TokenValidationItem:
      type: object
      required:
        - address
        - creatorAddress
      properties:
        address:
          type: string
          description: The token contract address
          example: "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
        creatorAddress:
          type: string
          description: The address of the token creator
          example: "0x6aAFF8af0ae8017725312C388bA3745dfE91185B"

    ActiveToken:
      type: object
      properties:
        address:
          type: string
          description: The token contract address
          example: "0x1234567890123456789012345678901234567890"
        creatorAddress:
          type: string
          description: The address of the token creator
          example: "0x0987654321098765432109876543210987654321"
        addedAt:
          type: number
          description: Timestamp when the token was added to the validator (in milliseconds)
          example: 1698512400000
        expiresAt:
          type: number
          description: Timestamp when the token validation expires (in milliseconds)
          example: 1698513000000
        hasBalance:
          type: boolean
          description: Whether the token has balance
        hasLiquidity:
          type: boolean
          description: Whether the token has liquidity
        erc20:
          type: object
          description: ERC20 token details
          properties:
            name:
              type: string
              example: "Sample Token"
            symbol:
              type: string
              example: "STKN"
            decimals:
              type: number
              example: 18
            totalSupply:
              type: string
              example: "1000000000000000000000000"

    LiquidityCheckResult:
      type: object
      properties:
        hasLiquidity:
          type: boolean
        protocol:
          type: string
          description: The protocol of the token
          example: "uniV2"
        liquidityETH:
          type: string
          description: Liquidity in ETH
          example: "10.5"
